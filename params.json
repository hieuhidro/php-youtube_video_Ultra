{"name":"Php-youtube video ultra","tagline":"Get video HD, Ultra HD from youtube URL with audio","body":"Youtube Downloader. Youtube UltraHD download,Youtube HD download, youtube mp3 download\r\n# php-youtube_getvideo\r\n *  ==========================================================================\r\n *  \r\n * ##PHP class to get the file location of Youtube videos, mp3 audio download the video\r\n * Get file mp3\r\n * Get file 3gp\r\n * Get file flv \r\n * Get file mp4 (720p, Ultra HD, 2K, 4K Video)\r\n *  ==========================================================================\r\n *  Introduction\r\n\r\n##This PHP class takes a YouTube URL (or YouTube Video-ID) and downloads the video, mp3 audio download the video to your computer.\r\n\r\n##UI Demo\r\n\r\nFor an example integration, try the demo: `https://youtubeservice.herokuapp.com/view.php#`\r\nOr Master Example with download Ultra HD with include Audio. :`http://360.horusvr.com`\r\n\r\n##Download\r\n\r\nThe latest stable version can be downloaded from the downloads tab, or using the following link:\r\n\r\n##Basic Usage\r\n\r\n##Usage is pretty straight forward:\r\n<h3>Anazyne Youtube Video and audio </h3>\r\n```php\r\n<?php\r\n    require('class.youtube.php');\r\n    $hydro->process($_POST['url'])){\r\n    echo $hydro->toJson(); \r\n?>\r\n```\r\n<h3>Anazyne Youtube Mage Video and audio to one file</h3>\r\n```php\r\n\r\n/**\r\n * (c) Copyright 2015 Hoang Hieu. All Rights Reserved.\r\n */\r\nrequire('anazyne.php');\r\nheader('Access-Control-Allow-Methods: POST');\r\nheader('Content-Type: application/json; charset=UTF-8');\r\n// Downloading HD Videos may take some time.\r\nini_set('max_execution_time', 0);\r\n// Writing HD Videos to your disk, may need some extra resources.\r\nini_set('memory_limit', '64M');\r\n$Gbyt = new GbYoutube();\r\nif (getRequest('yturl') && getRequest('mp3url') && getRequest('videoId') && getRequest('itag') && getRequest('title') && getRequest('token')) {\r\n    $token = md5(base64_encode(md5(getRequest('yturl') . getRequest('title') . getRequest('itag') . getRequest('videoId'))));\r\n    if (getRequest('token') == $token) {\r\n        $mertTitle = 'Out_youtubeid_' . getRequest('videoId') . '_' . getRequest('itag');\r\n        if (!file_exists('outvideos/' . $OutTitle . '.mp4')) {\r\n            $mp3Title = $Gbyt -> audioToServer(getRequest('mp3url'), getRequest('videoId'));\r\n            $videoTitle = $Gbyt -> videoToServer(getRequest('videoId'), getRequest('yturl'), getRequest('itag'));\r\n            if ($mp3Title && $videoTitle) {\r\n                try {\r\n                    $mertTitle = $Gbyt -> mergingAudio($videoTitle, $mp3Title);\r\n                    echo json_encode(array('url' => $mertTitle, 'msg' => 'successful'));\r\n                } catch(exception $err) {\r\n                    json_encode(array('msg' => $err -> getMessage(), 'status' => 'error'));\r\n                }\r\n            } else {\r\n                echo json_encode(array('msg' => \"Download file failed\", 'status' => 'error'));\r\n            }\r\n        } else {\r\n            echo json_encode(array('url' => $mertTitle, 'msg' => 'successful'));\r\n        }\r\n    } else {\r\n        echo json_encode(array('msg' => \"Invalidate token\", 'status' => 'error'));\r\n    }\r\n} else {\r\n    echo json_encode(array('msg' => \"Invalidate request\", 'status' => 'error'));\r\n}\r\n\r\n<?php \r\n    \r\n?>\r\n```\r\n\r\nThank's: for get ID Video from URL `https://github.com/eyecatchup/php-yt_downloader` to use this options\r\n\r\n`$ytNew->process(\"http://www.youtube.com/watch?v=aahOEZKTCzU\");` is identical to new\r\n\r\n`$ytNew->process(\"https://www.youtube.com/watch?feature=related&v=aahOEZKTCzU\");` is identical to new\r\n\r\n`$ytNew->process(\"aahOEZKTCzU\");`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}